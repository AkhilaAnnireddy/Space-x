[{"D:\\projects\\react\\space-x\\src\\index.js":"1","D:\\projects\\react\\space-x\\src\\App.js":"2","D:\\projects\\react\\space-x\\src\\components\\Header\\Header.jsx":"3","D:\\projects\\react\\space-x\\src\\components\\LaunchList\\LaunchList.jsx":"4","D:\\projects\\react\\space-x\\src\\components\\LaunchView\\LaunchView.jsx":"5","D:\\projects\\react\\space-x\\src\\components\\Launch\\Launch.jsx":"6"},{"size":411,"mtime":1607763478978,"results":"7","hashOfConfig":"8"},{"size":657,"mtime":1607763410245,"results":"9","hashOfConfig":"8"},{"size":223,"mtime":1607763359340,"results":"10","hashOfConfig":"8"},{"size":1297,"mtime":1607763359399,"results":"11","hashOfConfig":"8"},{"size":1830,"mtime":1607763359418,"results":"12","hashOfConfig":"8"},{"size":456,"mtime":1607763359390,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jrcfzh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\react\\space-x\\src\\index.js",[],["28","29"],"D:\\projects\\react\\space-x\\src\\App.js",[],"D:\\projects\\react\\space-x\\src\\components\\Header\\Header.jsx",[],"D:\\projects\\react\\space-x\\src\\components\\LaunchList\\LaunchList.jsx",[],"D:\\projects\\react\\space-x\\src\\components\\LaunchView\\LaunchView.jsx",["30"],"import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport './styles.css'\nimport { Zoom } from 'react-slideshow-image';\n\n\nconst zoomOutProperties = {\n  duration: 1000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  scale: 0.4,\n  arrows: true\n}\n\nexport class LaunchView extends React.Component {\n\n  state = {\n    launch: {\n      links: {\n        flickr_images: []\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    const flightNo = this.props.match.params.flight_number\n    this.getLaunch(flightNo)\n  }\n\n  getLaunch = (flightNo) => {\n    axios.get('https://api.spacexdata.com/v3/launches/' + flightNo).then((response) => {\n      this.setState(\n        { launch: response.data }\n      )\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  launchAttribute = (title, key) => {\n    const value = this.state.launch[key]\n    return (\n      <div className=\"attribute\">\n        <h1>{title}</h1>\n        <h1>{value}</h1>\n      </div>\n    )\n  }\n\n\n  render() {\n    const hasImages = this.state.launch.links.flickr_images.length > 0;\n    \n    return (\n      <div className=\"launch-view\">\n        {this.launchAttribute(\"Mission Name\", \"mission_name\")}\n        {this.launchAttribute(\"Flight Number\", \"flight_number\")}\n        {this.launchAttribute(\"Launch Date\", \"launch_date_local\")}\n        {\n          hasImages && (\n            <Zoom {...zoomOutProperties}>\n              {\n                this.state.launch.links.flickr_images.map((each, index) =>\n\n                  <img key={index} alt=\"Flicker Image\" style={{ width: \"100%\" }} src={each} />\n                )\n              }\n            </Zoom>\n\n          )\n        }\n\n        <p className='launch-description'>{this.state.launch.details}</p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(LaunchView);","D:\\projects\\react\\space-x\\src\\components\\Launch\\Launch.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":67,"column":19,"nodeType":"37","endLine":67,"endColumn":95},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]